spring:
  application:
    name: users-service
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3307/${DB_NAME:users_db}
    username: ${DB_USERNAME:david}
    password: ${DB_PASSWORD:Passer1234@}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
  cloud:
    discovery:
      enabled: true
    config:
      enabled: false

  main:
    allow-bean-definition-overriding: true

  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: myGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # value-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  cache:
    type: redis
    redis:
      time-to-live: 60000

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/school-manag-realm

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

logging:
  level:
    org:
      springframework:
        web: DEBUG
  file:
    name: users_service/logs/logs.log

springdoc:
  swagger-ui:
    oauth:
      client-id: school-manag-client
      client-secret: j6R3VCKbvVuGohFK5kOLPOmLnJhdtGAt
server:
  port: 8081