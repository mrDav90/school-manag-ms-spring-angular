version: '3.9'
services:
  discovery:
    build:
      context: ./discovery_service
      dockerfile: Dockerfile
    container_name: discovery
    restart: always
    ports:
      - "8761:8761"

  users_service_db:
    image: mysql
    container_name: users_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: users_db
      MYSQL_USER: david
      MYSQL_PASSWORD: Passer1234@
    ports:
      - "3307:3306"
    volumes:
      - users_mysql_data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD

  users_redis_cache:
    image: redis:latest
    container_name: users_redis_cache
    ports:
      - "6380:6379"
    command: redis-server --save "" --appendonly no

  cours_service_db:
    image: mysql
    container_name: cours_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cours_db
      MYSQL_USER: david
      MYSQL_PASSWORD: Passer1234@
    ports:
      - "3308:3306"
    volumes:
      - cours_mysql_data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD

  program_service_db:
    image: mysql
    container_name: program_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: program_db
      MYSQL_USER: david
      MYSQL_PASSWORD: Passer1234@
    ports:
      - "3309:3306"
    volumes:
      - program_mysql_data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD

  postgres_kc:
    image: postgres:9.6
    container_name: postgres_kc
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak_container
    #command: "start-dev"
    command: [ "start-dev", "--import-realm", "--import=/opt/keycloak/data/import/realm.json" ]
    environment:
      KEYCLOAK_DATABASE_HOST: postgres_kc
      KEYCLOAK_DATABASE_NAME: keycloak
      KEYCLOAK_DATABASE_USER: keycloak
      KEYCLOAK_DATABASE_SCHEMA: public
      KEYCLOAK_DATABASE_PASSWORD: keycloak
      KEYCLOAK_ADMIN_USER: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - postgres_kc
    volumes:
      - ./kc-realm.json:/opt/keycloak/data/import/realm.json

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  users_mysql_data:
    driver: local
  cours_mysql_data:
    driver: local
  program_mysql_data:
    driver: local
  postgres_data:
    driver: local

