{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-core-trans-button.mjs", "../../../../../../node_modules/@angular/cdk/fesm2022/clipboard.mjs", "../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-typography.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Directive, NgModule } from '@angular/core';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTransButtonDirective {\n  static {\n    this.ɵfac = function NzTransButtonDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzTransButtonDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzTransButtonDirective,\n      selectors: [[\"button\", \"nz-trans-button\", \"\"]],\n      hostVars: 8,\n      hostBindings: function NzTransButtonDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"border\", \"0\")(\"background\", \"transparent\")(\"padding\", \"0\")(\"line-height\", \"inherit\");\n        }\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTransButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'button[nz-trans-button]',\n      host: {\n        '[style.border]': '\"0\"',\n        '[style.background]': '\"transparent\"',\n        '[style.padding]': '\"0\"',\n        '[style.line-height]': '\"inherit\"'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTransButtonModule {\n  static {\n    this.ɵfac = function NzTransButtonModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzTransButtonModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzTransButtonModule,\n      imports: [NzTransButtonDirective],\n      exports: [NzTransButtonDirective]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTransButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzTransButtonDirective],\n      exports: [NzTransButtonDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTransButtonDirective, NzTransButtonModule };\n", "import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, InjectionToken, NgZone, EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n  _document;\n  _textarea;\n  constructor(text, _document) {\n    this._document = _document;\n    const textarea = this._textarea = this._document.createElement('textarea');\n    const styles = textarea.style;\n    // Hide the element for display and accessibility. Set a fixed position so the page layout\n    // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n    // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n    styles.position = 'fixed';\n    styles.top = styles.opacity = '0';\n    styles.left = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n    textarea.readOnly = true;\n    // The element needs to be inserted into the fullscreen container, if the page\n    // is in fullscreen mode, otherwise the browser won't execute the copy command.\n    (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n  }\n  /** Finishes copying the text. */\n  copy() {\n    const textarea = this._textarea;\n    let successful = false;\n    try {\n      // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement;\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n        if (currentFocus) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n    return successful;\n  }\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n    if (textarea) {\n      textarea.remove();\n      this._textarea = undefined;\n    }\n  }\n}\n\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n  _document = inject(DOCUMENT);\n  constructor() {}\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text) {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n    return successful;\n  }\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text) {\n    return new PendingCopy(text, this._document);\n  }\n  static ɵfac = function Clipboard_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Clipboard)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Clipboard,\n    factory: Clipboard.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Clipboard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n  _clipboard = inject(Clipboard);\n  _ngZone = inject(NgZone);\n  /** Content to be copied. */\n  text = '';\n  /**\n   * How many times to attempt to copy the text. This may be necessary for longer text, because\n   * the browser needs time to fill an intermediate textarea element and copy the content.\n   */\n  attempts = 1;\n  /**\n   * Emits when some text is copied to the clipboard. The\n   * emitted value indicates whether copying was successful.\n   */\n  copied = new EventEmitter();\n  /** Copies that are currently being attempted. */\n  _pending = new Set();\n  /** Whether the directive has been destroyed. */\n  _destroyed;\n  /** Timeout for the current copy attempt. */\n  _currentTimeout;\n  constructor() {\n    const config = inject(CDK_COPY_TO_CLIPBOARD_CONFIG, {\n      optional: true\n    });\n    if (config && config.attempts != null) {\n      this.attempts = config.attempts;\n    }\n  }\n  /** Copies the current text to the clipboard. */\n  copy(attempts = this.attempts) {\n    if (attempts > 1) {\n      let remainingAttempts = attempts;\n      const pending = this._clipboard.beginCopy(this.text);\n      this._pending.add(pending);\n      const attempt = () => {\n        const successful = pending.copy();\n        if (!successful && --remainingAttempts && !this._destroyed) {\n          // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n          this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n        } else {\n          this._currentTimeout = null;\n          this._pending.delete(pending);\n          pending.destroy();\n          this.copied.emit(successful);\n        }\n      };\n      attempt();\n    } else {\n      this.copied.emit(this._clipboard.copy(this.text));\n    }\n  }\n  ngOnDestroy() {\n    if (this._currentTimeout) {\n      clearTimeout(this._currentTimeout);\n    }\n    this._pending.forEach(copy => copy.destroy());\n    this._pending.clear();\n    this._destroyed = true;\n  }\n  static ɵfac = function CdkCopyToClipboard_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkCopyToClipboard)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkCopyToClipboard,\n    selectors: [[\"\", \"cdkCopyToClipboard\", \"\"]],\n    hostBindings: function CdkCopyToClipboard_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkCopyToClipboard_click_HostBindingHandler() {\n          return ctx.copy();\n        });\n      }\n    },\n    inputs: {\n      text: [0, \"cdkCopyToClipboard\", \"text\"],\n      attempts: [0, \"cdkCopyToClipboardAttempts\", \"attempts\"]\n    },\n    outputs: {\n      copied: \"cdkCopyToClipboardCopied\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCopyToClipboard, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCopyToClipboard]',\n      host: {\n        '(click)': 'copy()'\n      }\n    }]\n  }], () => [], {\n    text: [{\n      type: Input,\n      args: ['cdkCopyToClipboard']\n    }],\n    attempts: [{\n      type: Input,\n      args: ['cdkCopyToClipboardAttempts']\n    }],\n    copied: [{\n      type: Output,\n      args: ['cdkCopyToClipboardCopied']\n    }]\n  });\n})();\nclass ClipboardModule {\n  static ɵfac = function ClipboardModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ClipboardModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ClipboardModule,\n    imports: [CdkCopyToClipboard],\n    exports: [CdkCopyToClipboard]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClipboardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkCopyToClipboard],\n      exports: [CdkCopyToClipboard]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n", "import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, inject, Injector, afterNextRender, ViewChild, booleanAttribute, numberAttribute, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, Subscription } from 'rxjs';\nimport { takeUntil, switchMap, first } from 'rxjs/operators';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i4 from 'ng-zorro-antd/core/trans-button';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport * as i5 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport * as i1 from '@angular/cdk/clipboard';\nimport * as i2 from 'ng-zorro-antd/i18n';\nimport { ESCAPE, ENTER } from '@angular/cdk/keycodes';\nimport * as i2$1 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { fromEventOutsideAngular, isStyleSupport, measure } from 'ng-zorro-antd/core/util';\nimport * as i3$1 from 'ng-zorro-antd/input';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport { __esDecorate, __runInitializers } from 'tslib';\nimport { DOCUMENT, NgTemplateOutlet } from '@angular/common';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport * as i2$2 from '@angular/cdk/platform';\nimport * as i5$1 from '@angular/cdk/bidi';\nfunction NzTextCopyComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"nz-icon\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const icon_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", icon_r1);\n  }\n}\nconst _c0 = [\"textarea\"];\nfunction NzTextEditComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"textarea\", 2, 0);\n    i0.ɵɵlistener(\"blur\", function NzTextEditComponent_Conditional_0_Template_textarea_blur_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.confirm());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function NzTextEditComponent_Conditional_0_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.confirm());\n    });\n    i0.ɵɵelement(3, \"nz-icon\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NzTextEditComponent_Conditional_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"nz-icon\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const icon_r4 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", icon_r4);\n  }\n}\nfunction NzTextEditComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function NzTextEditComponent_Conditional_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick());\n    });\n    i0.ɵɵtemplate(1, NzTextEditComponent_Conditional_1_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzTooltipTitle\", ctx_r1.tooltip === null ? null : ctx_r1.tooltip || (ctx_r1.locale == null ? null : ctx_r1.locale.edit));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.icon);\n  }\n}\nconst _c1 = [\"ellipsisContainer\"];\nconst _c2 = [\"expandable\"];\nconst _c3 = [\"contentTemplate\"];\nconst _c4 = [\"*\"];\nconst _c5 = a0 => ({\n  content: a0\n});\nfunction NzTypographyComponent_ng_template_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction NzTypographyComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_Conditional_0_Template, 1, 0);\n    i0.ɵɵtext(1);\n  }\n  if (rf & 2) {\n    const content_r1 = ctx.content;\n    i0.ɵɵconditional(!content_r1 ? 0 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", content_r1, \" \");\n  }\n}\nfunction NzTypographyComponent_Conditional_2_Conditional_0_ng_template_0_Template(rf, ctx) {}\nfunction NzTypographyComponent_Conditional_2_Conditional_0_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.nzSuffix, \" \");\n  }\n}\nfunction NzTypographyComponent_Conditional_2_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTypographyComponent_Conditional_2_Conditional_0_ng_template_0_Template, 0, 0, \"ng-template\", 5)(1, NzTypographyComponent_Conditional_2_Conditional_0_Conditional_1_Template, 1, 1);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    const contentTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", contentTemplate_r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c5, ctx_r1.nzContent));\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.nzSuffix ? 1 : -1);\n  }\n}\nfunction NzTypographyComponent_Conditional_2_Conditional_1_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.ellipsisStr, \" \");\n  }\n}\nfunction NzTypographyComponent_Conditional_2_Conditional_1_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.nzSuffix, \" \");\n  }\n}\nfunction NzTypographyComponent_Conditional_2_Conditional_1_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 7, 2);\n    i0.ɵɵlistener(\"click\", function NzTypographyComponent_Conditional_2_Conditional_1_Conditional_4_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onExpand());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.locale == null ? null : ctx_r1.locale.expand, \" \");\n  }\n}\nfunction NzTypographyComponent_Conditional_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", null, 1);\n    i0.ɵɵtemplate(2, NzTypographyComponent_Conditional_2_Conditional_1_Conditional_2_Template, 1, 1)(3, NzTypographyComponent_Conditional_2_Conditional_1_Conditional_3_Template, 1, 1)(4, NzTypographyComponent_Conditional_2_Conditional_1_Conditional_4_Template, 3, 1, \"a\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r1.isEllipsis ? 2 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.nzSuffix ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.nzExpandable && ctx_r1.isEllipsis ? 4 : -1);\n  }\n}\nfunction NzTypographyComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTypographyComponent_Conditional_2_Conditional_0_Template, 2, 5)(1, NzTypographyComponent_Conditional_2_Conditional_1_Template, 5, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1.expanded || !ctx_r1.hasOperationsWithEllipsis && ctx_r1.nzEllipsisRows === 1 && !ctx_r1.hasEllipsisObservers || ctx_r1.canCssEllipsis || ctx_r1.nzSuffix && ctx_r1.expanded ? 0 : 1);\n  }\n}\nfunction NzTypographyComponent_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-text-edit\", 8);\n    i0.ɵɵlistener(\"endEditing\", function NzTypographyComponent_Conditional_3_Template_nz_text_edit_endEditing_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onEndEditing($event));\n    })(\"startEditing\", function NzTypographyComponent_Conditional_3_Template_nz_text_edit_startEditing_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onStartEditing());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r1.nzContent)(\"icon\", ctx_r1.nzEditIcon)(\"tooltip\", ctx_r1.nzEditTooltip);\n  }\n}\nfunction NzTypographyComponent_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-text-copy\", 9);\n    i0.ɵɵlistener(\"textCopy\", function NzTypographyComponent_Conditional_4_Template_nz_text_copy_textCopy_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onTextCopy($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r1.copyText)(\"tooltips\", ctx_r1.nzCopyTooltips)(\"icons\", ctx_r1.nzCopyIcons);\n  }\n}\nclass NzTextCopyComponent {\n  constructor(host, cdr, clipboard, i18n) {\n    this.host = host;\n    this.cdr = cdr;\n    this.clipboard = clipboard;\n    this.i18n = i18n;\n    this.copied = false;\n    this.nativeElement = this.host.nativeElement;\n    this.copyTooltip = null;\n    this.copedTooltip = null;\n    this.copyIcon = 'copy';\n    this.copedIcon = 'check';\n    this.destroy$ = new Subject();\n    this.icons = ['copy', 'check'];\n    this.textCopy = new EventEmitter();\n  }\n  ngOnInit() {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.updateTooltips();\n      this.cdr.markForCheck();\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      tooltips,\n      icons\n    } = changes;\n    if (tooltips) {\n      this.updateTooltips();\n    }\n    if (icons) {\n      this.updateIcons();\n    }\n  }\n  ngOnDestroy() {\n    clearTimeout(this.copyId);\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  onClick() {\n    if (this.copied) {\n      return;\n    }\n    this.copied = true;\n    this.cdr.detectChanges();\n    const text = this.text;\n    this.textCopy.emit(text);\n    this.clipboard.copy(text);\n    this.onCopied();\n  }\n  onCopied() {\n    clearTimeout(this.copyId);\n    this.copyId = setTimeout(() => {\n      this.copied = false;\n      this.cdr.detectChanges();\n    }, 3000);\n  }\n  updateTooltips() {\n    if (this.tooltips === null) {\n      this.copedTooltip = null;\n      this.copyTooltip = null;\n    } else if (Array.isArray(this.tooltips)) {\n      const [copyTooltip, copedTooltip] = this.tooltips;\n      this.copyTooltip = copyTooltip || this.locale?.copy;\n      this.copedTooltip = copedTooltip || this.locale?.copied;\n    } else {\n      this.copyTooltip = this.locale?.copy;\n      this.copedTooltip = this.locale?.copied;\n    }\n    this.cdr.markForCheck();\n  }\n  updateIcons() {\n    const [copyIcon, copedIcon] = this.icons;\n    this.copyIcon = copyIcon;\n    this.copedIcon = copedIcon;\n    this.cdr.markForCheck();\n  }\n  static {\n    this.ɵfac = function NzTextCopyComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzTextCopyComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Clipboard), i0.ɵɵdirectiveInject(i2.NzI18nService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTextCopyComponent,\n      selectors: [[\"nz-text-copy\"]],\n      inputs: {\n        text: \"text\",\n        tooltips: \"tooltips\",\n        icons: \"icons\"\n      },\n      outputs: {\n        textCopy: \"textCopy\"\n      },\n      exportAs: [\"nzTextCopy\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 4,\n      consts: [[\"type\", \"button\", \"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-copy\", 3, \"click\", \"nzTooltipTitle\"], [4, \"nzStringTemplateOutlet\"], [3, \"nzType\"]],\n      template: function NzTextCopyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function NzTextCopyComponent_Template_button_click_0_listener() {\n            return ctx.onClick();\n          });\n          i0.ɵɵtemplate(1, NzTextCopyComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-typography-copy-success\", ctx.copied);\n          i0.ɵɵproperty(\"nzTooltipTitle\", ctx.copied ? ctx.copedTooltip : ctx.copyTooltip);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.copied ? ctx.copedIcon : ctx.copyIcon);\n        }\n      },\n      dependencies: [NzToolTipModule, i3.NzTooltipDirective, NzTransButtonModule, i4.NzTransButtonDirective, NzIconModule, i5.NzIconDirective, NzOutletModule, i6.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextCopyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-text-copy',\n      exportAs: 'nzTextCopy',\n      template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <nz-icon [nzType]=\"icon\" />\n      </ng-container>\n    </button>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      imports: [NzToolTipModule, NzTransButtonModule, NzIconModule, NzOutletModule]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.Clipboard\n  }, {\n    type: i2.NzI18nService\n  }], {\n    text: [{\n      type: Input\n    }],\n    tooltips: [{\n      type: Input\n    }],\n    icons: [{\n      type: Input\n    }],\n    textCopy: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextEditComponent {\n  set textarea(textarea) {\n    this.textarea$.next(textarea);\n  }\n  constructor(ngZone, host, cdr, i18n, destroy$) {\n    this.ngZone = ngZone;\n    this.host = host;\n    this.cdr = cdr;\n    this.i18n = i18n;\n    this.destroy$ = destroy$;\n    this.editing = false;\n    this.icon = 'edit';\n    this.startEditing = new EventEmitter();\n    this.endEditing = new EventEmitter(true);\n    this.nativeElement = this.host.nativeElement;\n    // We could've saved the textarea within some private property (e.g. `_textarea`) and have a getter,\n    // but having subject makes the code more reactive and cancellable (e.g. event listeners will be\n    // automatically removed and re-added through the `switchMap` below).\n    this.textarea$ = new BehaviorSubject(null);\n    this.injector = inject(Injector);\n  }\n  ngOnInit() {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n    this.textarea$.pipe(switchMap(textarea => fromEventOutsideAngular(textarea?.nativeElement, 'keydown')), takeUntil(this.destroy$)).subscribe(event => {\n      // Caretaker note: adding modifier at the end (for instance `(keydown.esc)`) will tell Angular to add\n      // an event listener through the `KeyEventsPlugin`, which always runs `ngZone.runGuarded()` internally.\n      // We're interested only in escape and enter keyboard buttons, otherwise Angular will run change detection\n      // on any `keydown` event.\n      if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n        return;\n      }\n      this.ngZone.run(() => {\n        if (event.keyCode === ESCAPE) {\n          this.onCancel();\n        } else {\n          this.onEnter(event);\n        }\n        this.cdr.markForCheck();\n      });\n    });\n    this.textarea$.pipe(switchMap(textarea => fromEventOutsideAngular(textarea?.nativeElement, 'input')), takeUntil(this.destroy$)).subscribe(event => {\n      this.currentText = event.target.value;\n    });\n  }\n  onClick() {\n    this.beforeText = this.text;\n    this.currentText = this.beforeText;\n    this.editing = true;\n    this.startEditing.emit();\n    this.focusAndSetValue();\n  }\n  confirm() {\n    this.editing = false;\n    this.endEditing.emit(this.currentText);\n  }\n  onEnter(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.confirm();\n  }\n  onCancel() {\n    this.currentText = this.beforeText;\n    this.confirm();\n  }\n  focusAndSetValue() {\n    const {\n      injector\n    } = this;\n    afterNextRender(() => {\n      this.textarea$.pipe(\n      // It may still not be available, so we need to wait until view queries\n      // are executed during the change detection. It's safer to wait until\n      // the query runs and the textarea is set on the behavior subject.\n      first(textarea => textarea != null), takeUntil(this.destroy$)).subscribe(textarea => {\n        textarea.nativeElement.focus();\n        textarea.nativeElement.value = this.currentText || '';\n        this.autosizeDirective.resizeToFitContent();\n        this.cdr.markForCheck();\n      });\n    }, {\n      injector\n    });\n  }\n  static {\n    this.ɵfac = function NzTextEditComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzTextEditComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.NzI18nService), i0.ɵɵdirectiveInject(i2$1.NzDestroyService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTextEditComponent,\n      selectors: [[\"nz-text-edit\"]],\n      viewQuery: function NzTextEditComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(NzAutosizeDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textarea = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autosizeDirective = _t.first);\n        }\n      },\n      inputs: {\n        text: \"text\",\n        icon: \"icon\",\n        tooltip: \"tooltip\"\n      },\n      outputs: {\n        startEditing: \"startEditing\",\n        endEditing: \"endEditing\"\n      },\n      exportAs: [\"nzTextEdit\"],\n      features: [i0.ɵɵProvidersFeature([NzDestroyService])],\n      decls: 2,\n      vars: 1,\n      consts: [[\"textarea\", \"\"], [\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-edit\", 3, \"nzTooltipTitle\"], [\"nz-input\", \"\", \"nzAutosize\", \"\", 3, \"blur\"], [\"nz-trans-button\", \"\", 1, \"ant-typography-edit-content-confirm\", 3, \"click\"], [\"nzType\", \"enter\"], [\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-edit\", 3, \"click\", \"nzTooltipTitle\"], [4, \"nzStringTemplateOutlet\"], [3, \"nzType\"]],\n      template: function NzTextEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTextEditComponent_Conditional_0_Template, 4, 0)(1, NzTextEditComponent_Conditional_1_Template, 2, 2, \"button\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.editing ? 0 : 1);\n        }\n      },\n      dependencies: [NzInputModule, i3$1.NzInputDirective, i3$1.NzAutosizeDirective, NzTransButtonModule, i4.NzTransButtonDirective, NzIconModule, i5.NzIconDirective, NzToolTipModule, i3.NzTooltipDirective, NzOutletModule, i6.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-text-edit',\n      exportAs: 'nzTextEdit',\n      template: `\n    @if (editing) {\n      <textarea #textarea nz-input nzAutosize (blur)=\"confirm()\"></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <nz-icon nzType=\"enter\" />\n      </button>\n    } @else {\n      <button\n        nz-tooltip\n        nz-trans-button\n        class=\"ant-typography-edit\"\n        [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n        (click)=\"onClick()\"\n      >\n        <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n          <nz-icon [nzType]=\"icon\" />\n        </ng-container>\n      </button>\n    }\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      providers: [NzDestroyService],\n      imports: [NzInputModule, NzTransButtonModule, NzIconModule, NzToolTipModule, NzOutletModule]\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i2.NzI18nService\n  }, {\n    type: i2$1.NzDestroyService\n  }], {\n    text: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    startEditing: [{\n      type: Output\n    }],\n    endEditing: [{\n      type: Output\n    }],\n    textarea: [{\n      type: ViewChild,\n      args: ['textarea', {\n        static: false\n      }]\n    }],\n    autosizeDirective: [{\n      type: ViewChild,\n      args: [NzAutosizeDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\nconst NZ_CONFIG_MODULE_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\nlet NzTypographyComponent = (() => {\n  let _nzCopyTooltips_decorators;\n  let _nzCopyTooltips_initializers = [];\n  let _nzCopyTooltips_extraInitializers = [];\n  let _nzCopyIcons_decorators;\n  let _nzCopyIcons_initializers = [];\n  let _nzCopyIcons_extraInitializers = [];\n  let _nzEditTooltip_decorators;\n  let _nzEditTooltip_initializers = [];\n  let _nzEditTooltip_extraInitializers = [];\n  let _nzEditIcon_decorators;\n  let _nzEditIcon_initializers = [];\n  let _nzEditIcon_extraInitializers = [];\n  let _nzEllipsisRows_decorators;\n  let _nzEllipsisRows_initializers = [];\n  let _nzEllipsisRows_extraInitializers = [];\n  return class NzTypographyComponent {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      _nzCopyTooltips_decorators = [WithConfig()];\n      _nzCopyIcons_decorators = [WithConfig()];\n      _nzEditTooltip_decorators = [WithConfig()];\n      _nzEditIcon_decorators = [WithConfig()];\n      _nzEllipsisRows_decorators = [WithConfig()];\n      __esDecorate(null, null, _nzCopyTooltips_decorators, {\n        kind: \"field\",\n        name: \"nzCopyTooltips\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzCopyTooltips\" in obj,\n          get: obj => obj.nzCopyTooltips,\n          set: (obj, value) => {\n            obj.nzCopyTooltips = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzCopyTooltips_initializers, _nzCopyTooltips_extraInitializers);\n      __esDecorate(null, null, _nzCopyIcons_decorators, {\n        kind: \"field\",\n        name: \"nzCopyIcons\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzCopyIcons\" in obj,\n          get: obj => obj.nzCopyIcons,\n          set: (obj, value) => {\n            obj.nzCopyIcons = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzCopyIcons_initializers, _nzCopyIcons_extraInitializers);\n      __esDecorate(null, null, _nzEditTooltip_decorators, {\n        kind: \"field\",\n        name: \"nzEditTooltip\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzEditTooltip\" in obj,\n          get: obj => obj.nzEditTooltip,\n          set: (obj, value) => {\n            obj.nzEditTooltip = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzEditTooltip_initializers, _nzEditTooltip_extraInitializers);\n      __esDecorate(null, null, _nzEditIcon_decorators, {\n        kind: \"field\",\n        name: \"nzEditIcon\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzEditIcon\" in obj,\n          get: obj => obj.nzEditIcon,\n          set: (obj, value) => {\n            obj.nzEditIcon = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzEditIcon_initializers, _nzEditIcon_extraInitializers);\n      __esDecorate(null, null, _nzEllipsisRows_decorators, {\n        kind: \"field\",\n        name: \"nzEllipsisRows\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzEllipsisRows\" in obj,\n          get: obj => obj.nzEllipsisRows,\n          set: (obj, value) => {\n            obj.nzEllipsisRows = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzEllipsisRows_initializers, _nzEllipsisRows_extraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    get hasEllipsisObservers() {\n      return this.nzOnEllipsis.observers.length > 0;\n    }\n    get canCssEllipsis() {\n      return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n    }\n    get hasOperationsWithEllipsis() {\n      return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n    }\n    get copyText() {\n      return typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent;\n    }\n    constructor(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, resizeService, directionality) {\n      this.nzConfigService = nzConfigService;\n      this.host = host;\n      this.cdr = cdr;\n      this.viewContainerRef = viewContainerRef;\n      this.renderer = renderer;\n      this.platform = platform;\n      this.i18n = i18n;\n      this.resizeService = resizeService;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzCopyable = false;\n      this.nzEditable = false;\n      this.nzDisabled = false;\n      this.nzExpandable = false;\n      this.nzEllipsis = false;\n      this.nzCopyTooltips = __runInitializers(this, _nzCopyTooltips_initializers, undefined);\n      this.nzCopyIcons = (__runInitializers(this, _nzCopyTooltips_extraInitializers), __runInitializers(this, _nzCopyIcons_initializers, ['copy', 'check']));\n      this.nzEditTooltip = (__runInitializers(this, _nzCopyIcons_extraInitializers), __runInitializers(this, _nzEditTooltip_initializers, undefined));\n      this.nzEditIcon = (__runInitializers(this, _nzEditTooltip_extraInitializers), __runInitializers(this, _nzEditIcon_initializers, 'edit'));\n      this.nzContent = __runInitializers(this, _nzEditIcon_extraInitializers);\n      this.nzEllipsisRows = __runInitializers(this, _nzEllipsisRows_initializers, 1);\n      this.nzType = __runInitializers(this, _nzEllipsisRows_extraInitializers);\n      this.nzContentChange = new EventEmitter();\n      this.nzCopy = new EventEmitter();\n      this.nzExpandChange = new EventEmitter();\n      // This is not a two-way binding output with {@link nzEllipsis}\n      this.nzOnEllipsis = new EventEmitter();\n      this.document = inject(DOCUMENT);\n      this.expandableBtnElementCache = null;\n      this.editing = false;\n      this.cssEllipsis = false;\n      this.isEllipsis = true;\n      this.expanded = false;\n      this.ellipsisStr = '...';\n      this.dir = 'ltr';\n      this.viewInit = false;\n      this.rfaId = -1;\n      this.destroy$ = new Subject();\n      this.windowResizeSubscription = Subscription.EMPTY;\n    }\n    onTextCopy(text) {\n      this.nzCopy.emit(text);\n    }\n    onStartEditing() {\n      this.editing = true;\n    }\n    onEndEditing(text) {\n      this.editing = false;\n      this.nzContentChange.emit(text);\n      if (this.nzContent === text) {\n        this.renderOnNextFrame();\n      }\n      this.cdr.markForCheck();\n    }\n    onExpand() {\n      this.isEllipsis = false;\n      this.expanded = true;\n      this.nzExpandChange.emit();\n      this.nzOnEllipsis.emit(false);\n    }\n    canUseCSSEllipsis() {\n      if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n        return false;\n      }\n      // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n      if (this.hasEllipsisObservers) {\n        return false;\n      }\n      if (this.nzEllipsisRows === 1) {\n        return isStyleSupport('textOverflow');\n      } else {\n        return isStyleSupport('webkitLineClamp');\n      }\n    }\n    renderOnNextFrame() {\n      cancelRequestAnimationFrame(this.rfaId);\n      if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n        return;\n      }\n      this.rfaId = reqAnimFrame(() => {\n        this.syncEllipsis();\n      });\n    }\n    getOriginContentViewRef() {\n      const viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n        content: this.nzContent\n      });\n      viewRef.detectChanges();\n      return {\n        viewRef,\n        removeView: () => {\n          this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n        }\n      };\n    }\n    syncEllipsis() {\n      if (this.cssEllipsis) {\n        return;\n      }\n      const {\n        viewRef,\n        removeView\n      } = this.getOriginContentViewRef();\n      const fixedNodes = [this.textCopyRef, this.textEditRef].filter(e => e && e.nativeElement).map(e => e.nativeElement);\n      const expandableBtnElement = this.getExpandableBtnElement();\n      if (expandableBtnElement) {\n        fixedNodes.push(expandableBtnElement);\n      }\n      const {\n        contentNodes,\n        text,\n        ellipsis\n      } = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix);\n      removeView();\n      this.ellipsisText = text;\n      if (ellipsis !== this.isEllipsis) {\n        this.isEllipsis = ellipsis;\n        this.nzOnEllipsis.emit(ellipsis);\n      }\n      const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n      while (ellipsisContainerNativeElement.firstChild) {\n        this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n      }\n      contentNodes.forEach(n => {\n        this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n      });\n      this.cdr.markForCheck();\n    }\n    // Need to create the element for calculation size before view init\n    getExpandableBtnElement() {\n      if (this.nzExpandable) {\n        const expandText = this.locale ? this.locale.expand : '';\n        const cache = this.expandableBtnElementCache;\n        if (!cache || cache.innerText === expandText) {\n          const el = this.document.createElement('a');\n          el.className = EXPAND_ELEMENT_CLASSNAME;\n          el.innerText = expandText;\n          this.expandableBtnElementCache = el;\n        }\n        return this.expandableBtnElementCache;\n      } else {\n        this.expandableBtnElementCache = null;\n        return null;\n      }\n    }\n    renderAndSubscribeWindowResize() {\n      if (this.platform.isBrowser) {\n        this.windowResizeSubscription.unsubscribe();\n        this.cssEllipsis = this.canUseCSSEllipsis();\n        this.renderOnNextFrame();\n        this.windowResizeSubscription = this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(() => this.renderOnNextFrame());\n      }\n    }\n    ngOnInit() {\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.locale = this.i18n.getLocaleData('Text');\n        this.cdr.markForCheck();\n      });\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n    ngAfterViewInit() {\n      this.viewInit = true;\n      this.renderAndSubscribeWindowResize();\n    }\n    ngOnChanges(changes) {\n      const {\n        nzCopyable,\n        nzEditable,\n        nzExpandable,\n        nzEllipsis,\n        nzContent,\n        nzEllipsisRows,\n        nzSuffix\n      } = changes;\n      if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n        if (this.nzEllipsis) {\n          if (this.expanded) {\n            this.windowResizeSubscription.unsubscribe();\n          } else {\n            this.renderAndSubscribeWindowResize();\n          }\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.expandableBtnElementCache = null;\n      this.windowResizeSubscription.unsubscribe();\n    }\n    static {\n      this.ɵfac = function NzTypographyComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NzTypographyComponent)(i0.ɵɵdirectiveInject(i1$1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2$2.Platform), i0.ɵɵdirectiveInject(i2.NzI18nService), i0.ɵɵdirectiveInject(i2$1.NzResizeService), i0.ɵɵdirectiveInject(i5$1.Directionality));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: NzTypographyComponent,\n        selectors: [[\"nz-typography\"], [\"\", \"nz-typography\", \"\"], [\"p\", \"nz-paragraph\", \"\"], [\"span\", \"nz-text\", \"\"], [\"h1\", \"nz-title\", \"\"], [\"h2\", \"nz-title\", \"\"], [\"h3\", \"nz-title\", \"\"], [\"h4\", \"nz-title\", \"\"]],\n        viewQuery: function NzTypographyComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(NzTextEditComponent, 5);\n            i0.ɵɵviewQuery(NzTextCopyComponent, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n            i0.ɵɵviewQuery(_c2, 5);\n            i0.ɵɵviewQuery(_c3, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEditRef = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textCopyRef = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ellipsisContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.expandableBtn = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n          }\n        },\n        hostVars: 26,\n        hostBindings: function NzTypographyComponent_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"-webkit-line-clamp\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1 ? ctx.nzEllipsisRows : null);\n            i0.ɵɵclassProp(\"ant-typography\", !ctx.editing)(\"ant-typography-rtl\", ctx.dir === \"rtl\")(\"ant-typography-edit-content\", ctx.editing)(\"ant-typography-secondary\", ctx.nzType === \"secondary\")(\"ant-typography-warning\", ctx.nzType === \"warning\")(\"ant-typography-danger\", ctx.nzType === \"danger\")(\"ant-typography-success\", ctx.nzType === \"success\")(\"ant-typography-disabled\", ctx.nzDisabled)(\"ant-typography-ellipsis\", ctx.nzEllipsis && !ctx.expanded)(\"ant-typography-single-line\", ctx.nzEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-single-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-multiple-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1);\n          }\n        },\n        inputs: {\n          nzCopyable: [2, \"nzCopyable\", \"nzCopyable\", booleanAttribute],\n          nzEditable: [2, \"nzEditable\", \"nzEditable\", booleanAttribute],\n          nzDisabled: [2, \"nzDisabled\", \"nzDisabled\", booleanAttribute],\n          nzExpandable: [2, \"nzExpandable\", \"nzExpandable\", booleanAttribute],\n          nzEllipsis: [2, \"nzEllipsis\", \"nzEllipsis\", booleanAttribute],\n          nzCopyTooltips: \"nzCopyTooltips\",\n          nzCopyIcons: \"nzCopyIcons\",\n          nzEditTooltip: \"nzEditTooltip\",\n          nzEditIcon: \"nzEditIcon\",\n          nzContent: \"nzContent\",\n          nzEllipsisRows: [2, \"nzEllipsisRows\", \"nzEllipsisRows\", numberAttribute],\n          nzType: \"nzType\",\n          nzCopyText: \"nzCopyText\",\n          nzSuffix: \"nzSuffix\"\n        },\n        outputs: {\n          nzContentChange: \"nzContentChange\",\n          nzCopy: \"nzCopy\",\n          nzExpandChange: \"nzExpandChange\",\n          nzOnEllipsis: \"nzOnEllipsis\"\n        },\n        exportAs: [\"nzTypography\"],\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature],\n        ngContentSelectors: _c4,\n        decls: 5,\n        vars: 3,\n        consts: [[\"contentTemplate\", \"\"], [\"ellipsisContainer\", \"\"], [\"expandable\", \"\"], [3, \"text\", \"icon\", \"tooltip\"], [3, \"text\", \"tooltips\", \"icons\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-typography-expand\"], [1, \"ant-typography-expand\", 3, \"click\"], [3, \"endEditing\", \"startEditing\", \"text\", \"icon\", \"tooltip\"], [3, \"textCopy\", \"text\", \"tooltips\", \"icons\"]],\n        template: function NzTypographyComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, NzTypographyComponent_Conditional_2_Template, 2, 1)(3, NzTypographyComponent_Conditional_3_Template, 1, 3, \"nz-text-edit\", 3)(4, NzTypographyComponent_Conditional_4_Template, 1, 3, \"nz-text-copy\", 4);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(!ctx.editing ? 2 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.nzEditable ? 3 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.nzCopyable && !ctx.editing ? 4 : -1);\n          }\n        },\n        dependencies: [NgTemplateOutlet, NzTextEditComponent, NzTextCopyComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  };\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTypographyComponent, [{\n    type: Component,\n    args: [{\n      selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n      exportAs: 'nzTypography',\n      template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      @if (!content) {\n        <ng-content></ng-content>\n      }\n      {{ content }}\n    </ng-template>\n    @if (!editing) {\n      @if (\n        expanded ||\n        (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n        canCssEllipsis ||\n        (nzSuffix && expanded)\n      ) {\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        @if (nzSuffix) {\n          {{ nzSuffix }}\n        }\n      } @else {\n        <span #ellipsisContainer></span>\n        @if (isEllipsis) {\n          {{ ellipsisStr }}\n        }\n        @if (nzSuffix) {\n          {{ nzSuffix }}\n        }\n        @if (nzExpandable && isEllipsis) {\n          <a #expandable class=\"ant-typography-expand\" (click)=\"onExpand()\">\n            {{ locale?.expand }}\n          </a>\n        }\n      }\n    }\n\n    @if (nzEditable) {\n      <nz-text-edit\n        [text]=\"nzContent\"\n        [icon]=\"nzEditIcon\"\n        [tooltip]=\"nzEditTooltip\"\n        (endEditing)=\"onEndEditing($event)\"\n        (startEditing)=\"onStartEditing()\"\n      ></nz-text-edit>\n    }\n\n    @if (nzCopyable && !editing) {\n      <nz-text-copy\n        [text]=\"copyText\"\n        [tooltips]=\"nzCopyTooltips\"\n        [icons]=\"nzCopyIcons\"\n        (textCopy)=\"onTextCopy($event)\"\n      ></nz-text-copy>\n    }\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      host: {\n        '[class.ant-typography]': '!editing',\n        '[class.ant-typography-rtl]': 'dir === \"rtl\"',\n        '[class.ant-typography-edit-content]': 'editing',\n        '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n        '[class.ant-typography-warning]': 'nzType === \"warning\"',\n        '[class.ant-typography-danger]': 'nzType === \"danger\"',\n        '[class.ant-typography-success]': 'nzType === \"success\"',\n        '[class.ant-typography-disabled]': 'nzDisabled',\n        '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n        '[class.ant-typography-single-line]': 'nzEllipsis && nzEllipsisRows === 1',\n        '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n        '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n        '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n      },\n      imports: [NgTemplateOutlet, NzTextEditComponent, NzTextCopyComponent]\n    }]\n  }], () => [{\n    type: i1$1.NzConfigService\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i2$2.Platform\n  }, {\n    type: i2.NzI18nService\n  }, {\n    type: i2$1.NzResizeService\n  }, {\n    type: i5$1.Directionality\n  }], {\n    nzCopyable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzEditable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzExpandable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzEllipsis: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzCopyTooltips: [{\n      type: Input\n    }],\n    nzCopyIcons: [{\n      type: Input\n    }],\n    nzEditTooltip: [{\n      type: Input\n    }],\n    nzEditIcon: [{\n      type: Input\n    }],\n    nzContent: [{\n      type: Input\n    }],\n    nzEllipsisRows: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzCopyText: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzContentChange: [{\n      type: Output\n    }],\n    nzCopy: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzOnEllipsis: [{\n      type: Output\n    }],\n    textEditRef: [{\n      type: ViewChild,\n      args: [NzTextEditComponent, {\n        static: false\n      }]\n    }],\n    textCopyRef: [{\n      type: ViewChild,\n      args: [NzTextCopyComponent, {\n        static: false\n      }]\n    }],\n    ellipsisContainer: [{\n      type: ViewChild,\n      args: ['ellipsisContainer', {\n        static: false\n      }]\n    }],\n    expandableBtn: [{\n      type: ViewChild,\n      args: ['expandable', {\n        static: false\n      }]\n    }],\n    contentTemplate: [{\n      type: ViewChild,\n      args: ['contentTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTypographyModule {\n  static {\n    this.ɵfac = function NzTypographyModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzTypographyModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzTypographyModule,\n      imports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent],\n      exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTypographyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent],\n      exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };\n"],
  "mappings": "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",
  "names": ["NzTypographyComponent"]
}
